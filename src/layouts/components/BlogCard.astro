---
import config from "@/config/config.json";
import dateFormat from "@/lib/utils/dateFormat";
import { humanize, plainify, slugify, markdownify } from "@/lib/utils/textConverter"; // <-- Asegúrate de importar markdownify
import { FaRegFolder, FaRegUserCircle } from "react-icons/fa";
import ImageMod from "./ImageMod.astro";

const {
  summary_length,
}: { summary_length: number; blog_folder: string } = config.settings; // Mantener blog_folder para tipado si config.settings lo tiene

// 'data' es el objeto 'post' completo (CollectionEntry)
const { data } = Astro.props; 
const post = data; // Renombramos 'data' a 'post' para mayor claridad

// Desestructuramos las propiedades del frontmatter (post.data)
const { title, image, date, author, categories, description } = post.data; // También desestructuramos 'description'

const cleanedSlug = post.id.replace(/\.mdx?$/, ''); 

// --- NUEVA LÓGICA PARA EL RESUMEN DEL TEXTO ---
let postSummary: string = "";

if (post.body) {
  // Si no hay descripción, usamos el cuerpo del post
  postSummary = plainify(post.body); // Aseguramos que sea texto plano
}

// Cortar el resumen a la longitud deseada y añadir "..." si es necesario
if (postSummary.length > summary_length) {
  postSummary = postSummary.slice(0, Number(summary_length)) + '...';
}
---

<div class="bg-body dark:bg-darkmode-body">
  {
    image && (
      <ImageMod
        class="mb-6 w-full rounded"
        src={image}
        alt={title}
        width={445}
        height={230}
        format="webp"
      />
    )
  }
  <h4 class="mb-3">
    <a href={`/${cleanedSlug}`}>
      {title}
    </a>
  </h4>
  <ul class="mb-4">
    <li class="mr-4 inline-block">
      <a href={`/authors/${slugify(author)}`}>
        <FaRegUserCircle className={"mr-2 -mt-1 inline-block"} />
        {humanize(author)}
      </a>
    </li>
    <li class="mr-4 inline-block">
      <FaRegFolder className={"mr-2 -mt-1 inline-block"} />
      {
        categories.map((category: string, index: number) => (
          <a href={`/categories/${slugify(category)}`}>
            {humanize(category)}
            {index !== categories.length - 1 && ","}
          </a>
        ))
      }
    </li>
    {date && <li class="inline-block">{dateFormat(date)}</li>}
  </ul>
  
  {/* **CAMBIO CLAVE AQUÍ**: Mostrar la descripción o el cuerpo del post */}
  <p class="mb-6">
    {postSummary || 'Contenido no disponible.'} {/* Muestra el resumen o un mensaje de fallback */}
  </p>
  
  <a class="btn btn-outline-primary btn-sm" href={`/${cleanedSlug}`}>
    read more
  </a>
</div>